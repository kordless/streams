<project xmlns:fusion="http://lucidworks.com/fusion" default="package-app">

  <property name="build.dir" location="build"/>

  <property file=".fusion.properties"/>
  <property file="fusion.properties"/>

  <property name="app.name" value="sockitter"/>
  <property name="app.webapp" value="sockitter-editor"/>
  <property name="app.datasource" value="tweets"/>

  <target name="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="clean" description="Removes the build/ directory">
    <delete dir="${build.dir}"/>
  </target>

  <target name="generate-webapp" depends="init" description="builds sockitter-editor.war">
    <!-- copy and template substitute everything but objects.json(.template), that's done below after the webapp is built -->
    <copy todir="${build.dir}">
      <fileset dir="." includes="app/,src/,webapp/" excludes="app/objects.json.template,webapp/WEB-INF/lib/*.jar"/>
      <filterset>
        <propertyset>
          <propertyref prefix="app."/>
          <propertyref prefix="webapp."/>
        </propertyset>
      </filterset>
    </copy>

    <mkdir dir="${build.dir}/webapp/WEB-INF/classes"/>
    <javac srcdir="${build.dir}/src"
           destdir="${build.dir}/webapp/WEB-INF/classes"
           debug="on" includeAntRuntime="no">
      <classpath>
        <pathelement path="lib/servlet-api-3.1.jar"/>
        <fileset dir="webapp/WEB-INF/lib" includes="*.jar"/>
      </classpath>
    </javac>

    <zip destfile="${build.dir}/app/blobs/webapps/${app.webapp}.war">
      <zipfileset dir="${build.dir}/webapp"/>
      <zipfileset dir="webapp/WEB-INF/lib" includes="*.jar" prefix="WEB-INF/lib"/>
    </zip>

    <!-- Get the length and MD5 of the webapp, and put those details into objects.json -->
    <length file="${build.dir}/app/blobs/webapps/${app.webapp}.war" property="webapp.size"/>
    <checksum file="${build.dir}/app/blobs/webapps/${app.webapp}.war" property="webapp.md5"/>
    <echo>
      webapp size: ${webapp.size}

      webapp MD5: ${webapp.md5}
    </echo>

    <copy file="app/objects.json.template" tofile="${build.dir}/app/objects.json" overwrite="true">
      <filterset>
        <propertyset>
          <propertyref prefix="app."/>
          <propertyref prefix="webapp."/>
        </propertyset>
      </filterset>
    </copy>

  </target>

  <target name="package-app" depends="generate-webapp" description="builds sockitter.zip">
    <zip destfile="${build.dir}/${app.name}.zip">
      <!-- objects.json, as required by Fusion import, must be the FIRST file in the .zip -->
      <zipfileset dir="${build.dir}/app" includes="objects.json"/>
      <zipfileset dir="${build.dir}/app" includes="blobs/,configsets/"/>
    </zip>
  </target>

  <macrodef name="put"
            uri="http://lucidworks.com/fusion">
    <attribute name="endpoint"/>
    <attribute name="file" default=""/>
    <attribute name="content-type" default="application/json"/>
    <sequential>
      <echo>PUT @{endpoint} @{file}</echo>
      <exec executable="curl" failonerror="true">
        <arg value="-sS"/>
        <arg value="--fail"/>
        <arg value="-u"/>
        <arg value="${fusion.username}:${fusion.password}"/>
        <arg value="-X"/>
        <arg value="PUT"/>
        <arg value="-H"/>
        <arg value="Content-type: @{content-type}"/>
        <arg value="--data-binary"/>
        <arg value="@@@{file}"/>
        <arg value="${fusion.api.url}@{endpoint}"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="post"
            uri="http://lucidworks.com/fusion">
    <attribute name="endpoint"/>
    <attribute name="file"/>
    <attribute name="content-type" default="application/json"/>
    <sequential>
      <echo>POST @{endpoint} @{file}</echo>
      <exec executable="curl" failonerror="true">
        <arg value="-sS"/>
        <arg value="--fail"/>
        <arg value="-u"/>
        <arg value="${fusion.username}:${fusion.password}"/>
        <arg value="-X"/>
        <arg value="POST"/>
        <arg value="-H"/>
        <arg value="Content-type: @{content-type}"/>
        <arg value="-d"/>
        <arg value="@@@{file}"/>
        <arg value="${fusion.api.url}@{endpoint}"/>
      </exec>
    </sequential>
  </macrodef>

  <target name="install-webapp">
    <echo>Posting file...</echo>
    <fusion:post endpoint="/apps/${app.name}/webapps" file="conf/webapp.json"/>
    <fusion:put
        endpoint="/apps/${app.name}/webapps/${app.webapp}/war"
        file="${build.dir}/app/blobs/webapps/${app.webapp}.war"
        content-type="application/zip"/>
  </target>

  <target name="uninstall-webapp">
    <fusion:delete endpoint="/apps/${app.name}/webapps/${app.webapp}"/>
  </target>

<!--
  <target name="install-webapp" depends="package-webapp">
    <echo>Posting file...</echo>
    <post endpoint="/apps/${app.name}/webapps" file="${build.dir}/conf/webapp.json"/>
    <put
        endpoint="/apps/${app.name}/webapps/${app.webapp}/war"
        file="${build.dir}/${app.webapp}.war"
        content-type="application/zip"/>
  </target>

  <target name="uninstall-webapp">
    <delete endpoint="/apps/${app.name}/webapps/${app.webapp}"/>
  </target>

  <target name="stop-ds">
    <delete endpoint="/apps/${app.name}/connectors/jobs/${app.datasource}"/>
  </target>

  <target name="url">
    <echo>
      ${fusion.api.url}
    </echo>
  </target>

  <target name="install"
          depends=""/>
-->

  <target name="uninstall-app">
    <delete endpoint="/apps/${app.name}"/>
  </target>


  <target name="export-app">
    <mkdir dir="${build.dir}/temp"/>
    <get src="${fusion.api.url}/apollo/objects/export?app.ids=${app.name}"
         username="${fusion.username}"
         password="${fusion.password}"
         dest="${build.dir}/temp/${app.name}.zip"
         verbose="true">
      <header name="Accept" value="*/*"/>
    </get>
  </target>


  <!-- curl -u user:pass -H "Content-Type:multipart/form-data" -X POST -F 'importData=@/Users/admin/Fusion/export.zip' -F 'variableValues=@password_file.json' http://localhost:8764/api/objects/import?importPolicy=merge -->


  <macrodef name="delete"
            uri="http://lucidworks.com/fusion">
    <attribute name="endpoint"/>
    <sequential>
      <echo>DELETE @{endpoint}</echo>
      <exec executable="curl" failonerror="true">
        <arg value="-sS"/>
        <arg value="--fail"/>
        <arg value="-u"/>
        <arg value="${fusion.username}:${fusion.password}"/>
        <arg value="-X"/>
        <arg value="DELETE"/>
        <arg value="${fusion.api.url}@{endpoint}"/>
      </exec>
    </sequential>
  </macrodef>



</project>
